{
	"id": "e81ad1a584c4df5513c68929fe5b3792",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.6",
	"solcLongVersion": "0.6.6+commit.6c089d02",
	"input": {
		"language": "Solidity",
		"sources": {
			"lesson-3/FundMe.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity >=0.6.6 <0.9.0;\r\n\r\nimport \"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\";\r\n// \r\n\r\n// import \"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol\";\r\n// will import the chainlink npm (node package manager) from\r\n// https://github.com/smartcontractkit/chainlink/blob/develop/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol\r\n// code has been pasted in below\r\n\r\n// note the functions are not completed\r\n\r\n// Anytime you want to interact with an already deployed smart contract you will need an ABI\r\n// Interfaces compile down to an ABI\r\n// Always need an ABI to interact with a contract\r\n\r\ninterface AggregatorV3Interface {\r\n\r\n  function decimals()\r\n    external\r\n    view\r\n    returns (\r\n      uint8\r\n    );\r\n\r\n  function description()\r\n    external\r\n    view\r\n    returns (\r\n      string memory\r\n    );\r\n\r\n  function version()\r\n    external\r\n    view\r\n    returns (\r\n      uint256\r\n    );\r\n\r\n  // getRoundData and latestRoundData should both raise \"No data present\"\r\n  // if they do not have data to report, instead of returning unset values\r\n  // which could be misinterpreted as actual reported values.\r\n  function getRoundData(\r\n    uint80 _roundId\r\n  )\r\n    external\r\n    view\r\n    returns (\r\n      uint80 roundId,\r\n      int256 answer,\r\n      uint256 startedAt,\r\n      uint256 updatedAt,\r\n      uint80 answeredInRound\r\n    );\r\n\r\n  function latestRoundData()\r\n    external\r\n    view\r\n    returns (\r\n      uint80 roundId,\r\n      int256 answer,\r\n      uint256 startedAt,\r\n      uint256 updatedAt,\r\n      uint80 answeredInRound\r\n    );\r\n\r\n}\r\n\r\ncontract FundMe {\r\n  // Uses SafeMath library for all our uint256 definitions preventing overflows\r\n  // Libraries are similar to contracts but they are only deployed once at a specific address and their code is reused\r\n  // using A for B\r\n  // can be used to attach library functions from library A to any type B in the context of a contract\r\n  using SafeMathChainlink for uint256;\r\n\r\n  // create a new mapping between addresses and value\r\n  // see how much an invidual address has funded the contract\r\n  mapping(address => uint256) public addressToAmountFunded;\r\n\r\n\r\n  address public owner;\r\n  // constructor deploys with contract deployment\r\n  constructor() public {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  function fund() public payable {\r\n      // when we define a function as payable, this function can be used to pay for things\r\n      // i.e. we can pay the contract and it can hold funds\r\n      // every function call has an associated value with it\r\n      // wei is the smallest unit of measure of ethereum\r\n      uint256 minimumUSD = 50 * 10 ** 18; // minimum USD worth of ETH fundable to the contract\r\n      \r\n      // when a function reaches a require() statement, it checks conditions\r\n      // it will either continue if satisfied or revert and give an error message that you choose\r\n      require(getConversionRate(msg.value) >= minimumUSD, \"You need to spend more ETH!\"); // good practice to use require\r\n      addressToAmountFunded[msg.sender] += msg.value; // msg.sender and msg.value are keywords\r\n      // what is the ETH -> USD conversion rate?\r\n  }\r\n\r\n  function getVersion() public view returns (uint256){\r\n    // type visibility(skipped) name = interface(address)\r\n    // 0x8A753747A1Fa494EC906cE90E9f37563A8AF630e is the ETH/USD Rinkeby Testnet Chainlink pricefeed\r\n    AggregatorV3Interface priceFeed = AggregatorV3Interface(0x8A753747A1Fa494EC906cE90E9f37563A8AF630e);\r\n    return priceFeed.version();\r\n  }\r\n\r\n  // want to call latestRoundData int256 answer to get price feed\r\n  function getPrice() public view returns (uint256){\r\n    AggregatorV3Interface priceFeed = AggregatorV3Interface(0x8A753747A1Fa494EC906cE90E9f37563A8AF630e);\r\n    (,int256 answer,,,) = priceFeed.latestRoundData();\r\n    return uint256(answer * 10 ** 10);\r\n    // gives 340556041506 (note has 8 decimals which can be called from decimals function)\r\n    // multiply by 10^10 to give 18 decimals total\r\n    // after gives 3421454644190000000000\r\n  }\r\n\r\n  // 1 ether = 10^9 gwei = 10^18 wei\r\n  // reads in ethAmount and returns ethAmountInUsd\r\n  function getConversionRate (uint256 ethAmount) public view returns (uint256){\r\n    uint256 ethPrice = getPrice();\r\n    uint256 ethAmountInUsd = (ethPrice * ethAmount / (10 ** 18));\r\n    return ethAmountInUsd;\r\n  }\r\n\r\n  // modifier is used to change the behaviour of a function in a declarative way\r\n  modifier onlyOwner {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n  function withdraw() public payable {\r\n    // .transfer function sends some amount of ETH to whoever its being called on\r\n    // in this case its being sent to msg.sender\r\n    // 'this' is a keyword that refers to the current contract you're in\r\n    // address(this) gives you the address of the current contract\r\n    // .balance checks the ether balance of whatever its being called on\r\n    require(msg.sender == owner);\r\n    msg.sender.transfer(address(this).balance);\r\n    // need constructor to initiate an owner to the contract as soon as its deployed\r\n  }\r\n}"
			},
			"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMathChainlink {\n  /**\n    * @dev Returns the addition of two unsigned integers, reverting on\n    * overflow.\n    *\n    * Counterpart to Solidity's `+` operator.\n    *\n    * Requirements:\n    * - Addition cannot overflow.\n    */\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    require(c >= a, \"SafeMath: addition overflow\");\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the subtraction of two unsigned integers, reverting on\n    * overflow (when the result is negative).\n    *\n    * Counterpart to Solidity's `-` operator.\n    *\n    * Requirements:\n    * - Subtraction cannot overflow.\n    */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    require(b <= a, \"SafeMath: subtraction overflow\");\n    uint256 c = a - b;\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the multiplication of two unsigned integers, reverting on\n    * overflow.\n    *\n    * Counterpart to Solidity's `*` operator.\n    *\n    * Requirements:\n    * - Multiplication cannot overflow.\n    */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n    if (a == 0) {\n      return 0;\n    }\n\n    uint256 c = a * b;\n    require(c / a == b, \"SafeMath: multiplication overflow\");\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the integer division of two unsigned integers. Reverts on\n    * division by zero. The result is rounded towards zero.\n    *\n    * Counterpart to Solidity's `/` operator. Note: this function uses a\n    * `revert` opcode (which leaves remaining gas untouched) while Solidity\n    * uses an invalid opcode to revert (consuming all remaining gas).\n    *\n    * Requirements:\n    * - The divisor cannot be zero.\n    */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    // Solidity only automatically asserts when dividing by 0\n    require(b > 0, \"SafeMath: division by zero\");\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n    * Reverts when dividing by zero.\n    *\n    * Counterpart to Solidity's `%` operator. This function uses a `revert`\n    * opcode (which leaves remaining gas untouched) while Solidity uses an\n    * invalid opcode to revert (consuming all remaining gas).\n    *\n    * Requirements:\n    * - The divisor cannot be zero.\n    */\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n    require(b != 0, \"SafeMath: modulo by zero\");\n    return a % b;\n  }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol": {
				"SafeMathChainlink": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":621:3404  library SafeMathChainlink {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":621:3404  library SafeMathChainlink {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n\n    auxdata: 0xa2646970667358221220592a4870abda3a80acd1314c3b0154594dc009f65149c29ccd09c440b5ee4ab864736f6c63430006060033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220592a4870abda3a80acd1314c3b0154594dc009f65149c29ccd09c440b5ee4ab864736f6c63430006060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE 0x2A 0x48 PUSH17 0xABDA3A80ACD1314C3B0154594DC009F651 0x49 0xC2 SWAP13 0xCD MULMOD 0xC4 BLOCKHASH 0xB5 0xEE 0x4A 0xB8 PUSH5 0x736F6C6343 STOP MOD MOD STOP CALLER ",
							"sourceMap": "621:2783:0:-:0;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220592a4870abda3a80acd1314c3b0154594dc009f65149c29ccd09c440b5ee4ab864736f6c63430006060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE 0x2A 0x48 PUSH17 0xABDA3A80ACD1314C3B0154594DC009F651 0x49 0xC2 SWAP13 0xCD MULMOD 0xC4 BLOCKHASH 0xB5 0xEE 0x4A 0xB8 PUSH5 0x736F6C6343 STOP MOD MOD STOP CALLER ",
							"sourceMap": "621:2783:0:-:0;;;;;;12:1:-1;9;2:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 621,
									"end": 3404,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"source": -1,
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE",
									"source": -1
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"source": -1,
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ",
									"source": -1
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID",
									"source": -1
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS",
									"source": -1
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"source": -1,
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8",
									"source": -1
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN",
									"source": -1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220592a4870abda3a80acd1314c3b0154594dc009f65149c29ccd09c440b5ee4ab864736f6c63430006060033",
									".code": [
										{
											"begin": 621,
											"end": 3404,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 621,
											"end": 3404,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 621,
											"end": 3404,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 621,
											"end": 3404,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 621,
											"end": 3404,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 621,
											"end": 3404,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":\"SafeMathChainlink\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":{\"keccak256\":\"0x105f5e9491f3d0bbdd4f1c7627eb839d69b944bfd803028a01cc083597692c1f\",\"urls\":[\"bzz-raw://ec45a2748a024a947a921183d4102d5e206808588501d85ddc4f5668a009bc73\",\"dweb:/ipfs/QmRNAMpq7LdWFnJ7wWKGbUuAcURaGSS42PMxtQ4vjrHmp9\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"lesson-3/FundMe.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"lesson-3/FundMe.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":{\"keccak256\":\"0x105f5e9491f3d0bbdd4f1c7627eb839d69b944bfd803028a01cc083597692c1f\",\"urls\":[\"bzz-raw://ec45a2748a024a947a921183d4102d5e206808588501d85ddc4f5668a009bc73\",\"dweb:/ipfs/QmRNAMpq7LdWFnJ7wWKGbUuAcURaGSS42PMxtQ4vjrHmp9\"]},\"lesson-3/FundMe.sol\":{\"keccak256\":\"0x57bfb805dda108d568181e05c679ba29b1be6cda9ecde141a60f1355fc155464\",\"urls\":[\"bzz-raw://06a7bf6aa3a0e05c8090501e69b6b41f2165b0937d88d684fb742b154176e308\",\"dweb:/ipfs/QmXA6PVftHDN6M5GQh1Ju6BYU4o7BKgGbusNFYgxqm8b5h\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"FundMe": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "addressToAmountFunded",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fund",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "ethAmount",
									"type": "uint256"
								}
							],
							"name": "getConversionRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getVersion",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"lesson-3/FundMe.sol\":1630:5109  contract FundMe {\r... */\n  mstore(0x40, 0x80)\n    /* \"lesson-3/FundMe.sol\":2277:2329  constructor() public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":5:14   */\n  dup1\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":27:28   */\n  0x00\n    /* \"--CODEGEN--\":24:25   */\n  dup1\n    /* \"--CODEGEN--\":17:29   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_1:\n    /* \"lesson-3/FundMe.sol\":2277:2329  constructor() public {\r... */\n  pop\n    /* \"lesson-3/FundMe.sol\":2313:2323  msg.sender */\n  caller\n    /* \"lesson-3/FundMe.sol\":2305:2310  owner */\n  0x01\n  0x00\n    /* \"lesson-3/FundMe.sol\":2305:2323  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"lesson-3/FundMe.sol\":1630:5109  contract FundMe {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"lesson-3/FundMe.sol\":1630:5109  contract FundMe {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6e5b6b28\n      gt\n      tag_9\n      jumpi\n      dup1\n      0x6e5b6b28\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x98d5fdca\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xb60d4288\n      eq\n      tag_8\n      jumpi\n      jump(tag_1)\n    tag_9:\n      dup1\n      0x0d8e6e2c\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3e47d6f3\n      eq\n      tag_4\n      jumpi\n    tag_1:\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"lesson-3/FundMe.sol\":3201:3558  function getVersion() public view returns (uint256){\r... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_10\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_10:\n        /* \"lesson-3/FundMe.sol\":3201:3558  function getVersion() public view returns (uint256){\r... */\n      pop\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lesson-3/FundMe.sol\":4546:5106  function withdraw() public payable {\r... */\n    tag_3:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      stop\n        /* \"lesson-3/FundMe.sol\":2136:2192  mapping(address => uint256) public addressToAmountFunded */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_15:\n        /* \"lesson-3/FundMe.sol\":2136:2192  mapping(address => uint256) public addressToAmountFunded */\n      pop\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_17\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_17:\n        /* \"lesson-3/FundMe.sol\":2136:2192  mapping(address => uint256) public addressToAmountFunded */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_18\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lesson-3/FundMe.sol\":4171:4384  function getConversionRate (uint256 ethAmount) public view returns (uint256){\r... */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_19\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_19:\n        /* \"lesson-3/FundMe.sol\":4171:4384  function getConversionRate (uint256 ethAmount) public view returns (uint256){\r... */\n      pop\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_21\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_21:\n        /* \"lesson-3/FundMe.sol\":4171:4384  function getConversionRate (uint256 ethAmount) public view returns (uint256){\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_22\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lesson-3/FundMe.sol\":2201:2221  address public owner */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_23\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_23:\n        /* \"lesson-3/FundMe.sol\":2201:2221  address public owner */\n      pop\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lesson-3/FundMe.sol\":3631:4075  function getPrice() public view returns (uint256){\r... */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_26\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_26:\n        /* \"lesson-3/FundMe.sol\":3631:4075  function getPrice() public view returns (uint256){\r... */\n      pop\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lesson-3/FundMe.sol\":2335:3195  function fund() public payable {\r... */\n    tag_8:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      stop\n        /* \"lesson-3/FundMe.sol\":3201:3558  function getVersion() public view returns (uint256){\r... */\n    tag_12:\n        /* \"lesson-3/FundMe.sol\":3244:3251  uint256 */\n      0x00\n        /* \"lesson-3/FundMe.sol\":3420:3451  AggregatorV3Interface priceFeed */\n      dup1\n        /* \"lesson-3/FundMe.sol\":3476:3518  0x8A753747A1Fa494EC906cE90E9f37563A8AF630e */\n      0x8a753747a1fa494ec906ce90e9f37563a8af630e\n        /* \"lesson-3/FundMe.sol\":3420:3519  AggregatorV3Interface priceFeed = AggregatorV3Interface(0x8A753747A1Fa494EC906cE90E9f37563A8AF630e) */\n      swap1\n      pop\n        /* \"lesson-3/FundMe.sol\":3533:3542  priceFeed */\n      dup1\n        /* \"lesson-3/FundMe.sol\":3533:3550  priceFeed.version */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x54fd4d50\n        /* \"lesson-3/FundMe.sol\":3533:3552  priceFeed.version() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_32\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_32:\n        /* \"lesson-3/FundMe.sol\":3533:3552  priceFeed.version() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_34\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_34:\n        /* \"lesson-3/FundMe.sol\":3533:3552  priceFeed.version() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_35\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_35:\n        /* \"lesson-3/FundMe.sol\":3533:3552  priceFeed.version() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"lesson-3/FundMe.sol\":3526:3552  return priceFeed.version() */\n      swap2\n      pop\n      pop\n        /* \"lesson-3/FundMe.sol\":3201:3558  function getVersion() public view returns (uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"lesson-3/FundMe.sol\":4546:5106  function withdraw() public payable {\r... */\n    tag_14:\n        /* \"lesson-3/FundMe.sol\":4959:4964  owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lesson-3/FundMe.sol\":4945:4964  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lesson-3/FundMe.sol\":4945:4955  msg.sender */\n      caller\n        /* \"lesson-3/FundMe.sol\":4945:4964  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"lesson-3/FundMe.sol\":4937:4965  require(msg.sender == owner) */\n      tag_37\n      jumpi\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"lesson-3/FundMe.sol\":4937:4965  require(msg.sender == owner) */\n    tag_37:\n        /* \"lesson-3/FundMe.sol\":4972:4982  msg.sender */\n      caller\n        /* \"lesson-3/FundMe.sol\":4972:4991  msg.sender.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lesson-3/FundMe.sol\":4972:5014  msg.sender.transfer(address(this).balance) */\n      0x08fc\n        /* \"lesson-3/FundMe.sol\":4992:5013  address(this).balance */\n      selfbalance\n        /* \"lesson-3/FundMe.sol\":4972:5014  msg.sender.transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_39:\n        /* \"lesson-3/FundMe.sol\":4972:5014  msg.sender.transfer(address(this).balance) */\n      pop\n        /* \"lesson-3/FundMe.sol\":4546:5106  function withdraw() public payable {\r... */\n      jump\t// out\n        /* \"lesson-3/FundMe.sol\":2136:2192  mapping(address => uint256) public addressToAmountFunded */\n    tag_18:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"lesson-3/FundMe.sol\":4171:4384  function getConversionRate (uint256 ethAmount) public view returns (uint256){\r... */\n    tag_22:\n        /* \"lesson-3/FundMe.sol\":4239:4246  uint256 */\n      0x00\n        /* \"lesson-3/FundMe.sol\":4254:4270  uint256 ethPrice */\n      dup1\n        /* \"lesson-3/FundMe.sol\":4273:4283  getPrice() */\n      tag_41\n        /* \"lesson-3/FundMe.sol\":4273:4281  getPrice */\n      tag_28\n        /* \"lesson-3/FundMe.sol\":4273:4283  getPrice() */\n      jump\t// in\n    tag_41:\n        /* \"lesson-3/FundMe.sol\":4254:4283  uint256 ethPrice = getPrice() */\n      swap1\n      pop\n        /* \"lesson-3/FundMe.sol\":4290:4312  uint256 ethAmountInUsd */\n      0x00\n        /* \"lesson-3/FundMe.sol\":4340:4348  10 ** 18 */\n      0x0de0b6b3a7640000\n        /* \"lesson-3/FundMe.sol\":4327:4336  ethAmount */\n      dup5\n        /* \"lesson-3/FundMe.sol\":4316:4324  ethPrice */\n      dup4\n        /* \"lesson-3/FundMe.sol\":4316:4336  ethPrice * ethAmount */\n      mul\n        /* \"lesson-3/FundMe.sol\":4316:4349  ethPrice * ethAmount / (10 ** 18) */\n      dup2\n      tag_42\n      jumpi\n      invalid\n    tag_42:\n      div\n        /* \"lesson-3/FundMe.sol\":4290:4350  uint256 ethAmountInUsd = (ethPrice * ethAmount / (10 ** 18)) */\n      swap1\n      pop\n        /* \"lesson-3/FundMe.sol\":4364:4378  ethAmountInUsd */\n      dup1\n        /* \"lesson-3/FundMe.sol\":4357:4378  return ethAmountInUsd */\n      swap3\n      pop\n      pop\n      pop\n        /* \"lesson-3/FundMe.sol\":4171:4384  function getConversionRate (uint256 ethAmount) public view returns (uint256){\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"lesson-3/FundMe.sol\":2201:2221  address public owner */\n    tag_25:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"lesson-3/FundMe.sol\":3631:4075  function getPrice() public view returns (uint256){\r... */\n    tag_28:\n        /* \"lesson-3/FundMe.sol\":3672:3679  uint256 */\n      0x00\n        /* \"lesson-3/FundMe.sol\":3687:3718  AggregatorV3Interface priceFeed */\n      dup1\n        /* \"lesson-3/FundMe.sol\":3743:3785  0x8A753747A1Fa494EC906cE90E9f37563A8AF630e */\n      0x8a753747a1fa494ec906ce90e9f37563a8af630e\n        /* \"lesson-3/FundMe.sol\":3687:3786  AggregatorV3Interface priceFeed = AggregatorV3Interface(0x8A753747A1Fa494EC906cE90E9f37563A8AF630e) */\n      swap1\n      pop\n        /* \"lesson-3/FundMe.sol\":3795:3808  int256 answer */\n      0x00\n        /* \"lesson-3/FundMe.sol\":3815:3824  priceFeed */\n      dup2\n        /* \"lesson-3/FundMe.sol\":3815:3840  priceFeed.latestRoundData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfeaf968c\n        /* \"lesson-3/FundMe.sol\":3815:3842  priceFeed.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_44\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_44:\n        /* \"lesson-3/FundMe.sol\":3815:3842  priceFeed.latestRoundData() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_46\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_46:\n        /* \"lesson-3/FundMe.sol\":3815:3842  priceFeed.latestRoundData() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":15:18   */\n      0xa0\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:19   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_47\n      jumpi\n        /* \"--CODEGEN--\":32:33   */\n      0x00\n        /* \"--CODEGEN--\":29:30   */\n      dup1\n        /* \"--CODEGEN--\":22:34   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_47:\n        /* \"lesson-3/FundMe.sol\":3815:3842  priceFeed.latestRoundData() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"lesson-3/FundMe.sol\":3793:3842  (,int256 answer,,,) = priceFeed.latestRoundData() */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"lesson-3/FundMe.sol\":3873:3881  10 ** 10 */\n      0x02540be400\n        /* \"lesson-3/FundMe.sol\":3864:3870  answer */\n      dup2\n        /* \"lesson-3/FundMe.sol\":3864:3881  answer * 10 ** 10 */\n      mul\n        /* \"lesson-3/FundMe.sol\":3849:3882  return uint256(answer * 10 ** 10) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"lesson-3/FundMe.sol\":3631:4075  function getPrice() public view returns (uint256){\r... */\n      swap1\n      jump\t// out\n        /* \"lesson-3/FundMe.sol\":2335:3195  function fund() public payable {\r... */\n    tag_30:\n        /* \"lesson-3/FundMe.sol\":2648:2666  uint256 minimumUSD */\n      0x00\n        /* \"lesson-3/FundMe.sol\":2669:2682  50 * 10 ** 18 */\n      0x02b5e3af16b1880000\n        /* \"lesson-3/FundMe.sol\":2648:2682  uint256 minimumUSD = 50 * 10 ** 18 */\n      swap1\n      pop\n        /* \"lesson-3/FundMe.sol\":2969:2979  minimumUSD */\n      dup1\n        /* \"lesson-3/FundMe.sol\":2937:2965  getConversionRate(msg.value) */\n      tag_49\n        /* \"lesson-3/FundMe.sol\":2955:2964  msg.value */\n      callvalue\n        /* \"lesson-3/FundMe.sol\":2937:2954  getConversionRate */\n      tag_22\n        /* \"lesson-3/FundMe.sol\":2937:2965  getConversionRate(msg.value) */\n      jump\t// in\n    tag_49:\n        /* \"lesson-3/FundMe.sol\":2937:2979  getConversionRate(msg.value) >= minimumUSD */\n      lt\n      iszero\n        /* \"lesson-3/FundMe.sol\":2929:3011  require(getConversionRate(msg.value) >= minimumUSD, \"You need to spend more ETH!\") */\n      tag_50\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x596f75206e65656420746f207370656e64206d6f726520455448210000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_50:\n        /* \"lesson-3/FundMe.sol\":3089:3098  msg.value */\n      callvalue\n        /* \"lesson-3/FundMe.sol\":3052:3073  addressToAmountFunded */\n      0x00\n        /* \"lesson-3/FundMe.sol\":3052:3085  addressToAmountFunded[msg.sender] */\n      dup1\n        /* \"lesson-3/FundMe.sol\":3074:3084  msg.sender */\n      caller\n        /* \"lesson-3/FundMe.sol\":3052:3085  addressToAmountFunded[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"lesson-3/FundMe.sol\":3052:3098  addressToAmountFunded[msg.sender] += msg.value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"lesson-3/FundMe.sol\":2335:3195  function fund() public payable {\r... */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220841c533e14a062b4046a5b55831da5485d300d75c218e9fe16396422ec4a954064736f6c63430006060033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610586806100616000396000f3fe6080604052600436106100705760003560e01c80636e5b6b281161004e5780636e5b6b281461010f5780638da5cb5b1461015e57806398d5fdca146101b5578063b60d4288146101e057610070565b80630d8e6e2c146100755780633ccfd60b146100a05780633e47d6f3146100aa575b600080fd5b34801561008157600080fd5b5061008a6101ea565b6040518082815260200191505060405180910390f35b6100a861028b565b005b3480156100b657600080fd5b506100f9600480360360208110156100cd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061032e565b6040518082815260200191505060405180910390f35b34801561011b57600080fd5b506101486004803603602081101561013257600080fd5b8101908080359060200190929190505050610346565b6040518082815260200191505060405180910390f35b34801561016a57600080fd5b50610173610375565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101c157600080fd5b506101ca61039b565b6040518082815260200191505060405180910390f35b6101e8610475565b005b600080738a753747a1fa494ec906ce90e9f37563a8af630e90508073ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561024a57600080fd5b505afa15801561025e573d6000803e3d6000fd5b505050506040513d602081101561027457600080fd5b810190808051906020019092919050505091505090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102e557600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561032b573d6000803e3d6000fd5b50565b60006020528060005260406000206000915090505481565b60008061035161039b565b90506000670de0b6b3a76400008483028161036857fe5b0490508092505050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080738a753747a1fa494ec906ce90e9f37563a8af630e905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156103fd57600080fd5b505afa158015610411573d6000803e3d6000fd5b505050506040513d60a081101561042757600080fd5b8101908080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291905050505050509150506402540be40081029250505090565b60006802b5e3af16b188000090508061048d34610346565b1015610501576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f596f75206e65656420746f207370656e64206d6f72652045544821000000000081525060200191505060405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505056fea2646970667358221220841c533e14a062b4046a5b55831da5485d300d75c218e9fe16396422ec4a954064736f6c63430006060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x586 DUP1 PUSH2 0x61 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x70 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6E5B6B28 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x6E5B6B28 EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x98D5FDCA EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0xB60D4288 EQ PUSH2 0x1E0 JUMPI PUSH2 0x70 JUMP JUMPDEST DUP1 PUSH4 0xD8E6E2C EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x3E47D6F3 EQ PUSH2 0xAA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8A PUSH2 0x1EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA8 PUSH2 0x28B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x32E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x346 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x173 PUSH2 0x375 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CA PUSH2 0x39B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 PUSH2 0x475 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0x8A753747A1FA494EC906CE90E9F37563A8AF630E SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x54FD4D50 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x25E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x274 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x32B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x351 PUSH2 0x39B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP5 DUP4 MUL DUP2 PUSH2 0x368 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0x8A753747A1FA494EC906CE90E9F37563A8AF630E SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x411 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x427 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP POP POP SWAP2 POP POP PUSH5 0x2540BE400 DUP2 MUL SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH9 0x2B5E3AF16B1880000 SWAP1 POP DUP1 PUSH2 0x48D CALLVALUE PUSH2 0x346 JUMP JUMPDEST LT ISZERO PUSH2 0x501 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x596F75206E65656420746F207370656E64206D6F726520455448210000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 SHR MSTORE8 RETURNDATACOPY EQ LOG0 PUSH3 0xB4046A JUMPDEST SSTORE DUP4 SAR 0xA5 0x48 0x5D ADDRESS 0xD PUSH22 0xC218E9FE16396422EC4A954064736F6C634300060600 CALLER ",
							"sourceMap": "1630:3479:1:-:0;;;2277:52;5:9:-1;2:2;;;27:1;24;17:12;2:2;2277:52:1;2313:10;2305:5;;:18;;;;;;;;;;;;;;;;;;1630:3479;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100705760003560e01c80636e5b6b281161004e5780636e5b6b281461010f5780638da5cb5b1461015e57806398d5fdca146101b5578063b60d4288146101e057610070565b80630d8e6e2c146100755780633ccfd60b146100a05780633e47d6f3146100aa575b600080fd5b34801561008157600080fd5b5061008a6101ea565b6040518082815260200191505060405180910390f35b6100a861028b565b005b3480156100b657600080fd5b506100f9600480360360208110156100cd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061032e565b6040518082815260200191505060405180910390f35b34801561011b57600080fd5b506101486004803603602081101561013257600080fd5b8101908080359060200190929190505050610346565b6040518082815260200191505060405180910390f35b34801561016a57600080fd5b50610173610375565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101c157600080fd5b506101ca61039b565b6040518082815260200191505060405180910390f35b6101e8610475565b005b600080738a753747a1fa494ec906ce90e9f37563a8af630e90508073ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561024a57600080fd5b505afa15801561025e573d6000803e3d6000fd5b505050506040513d602081101561027457600080fd5b810190808051906020019092919050505091505090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102e557600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561032b573d6000803e3d6000fd5b50565b60006020528060005260406000206000915090505481565b60008061035161039b565b90506000670de0b6b3a76400008483028161036857fe5b0490508092505050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080738a753747a1fa494ec906ce90e9f37563a8af630e905060008173ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156103fd57600080fd5b505afa158015610411573d6000803e3d6000fd5b505050506040513d60a081101561042757600080fd5b8101908080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291905050505050509150506402540be40081029250505090565b60006802b5e3af16b188000090508061048d34610346565b1015610501576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f596f75206e65656420746f207370656e64206d6f72652045544821000000000081525060200191505060405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505056fea2646970667358221220841c533e14a062b4046a5b55831da5485d300d75c218e9fe16396422ec4a954064736f6c63430006060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x70 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6E5B6B28 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x6E5B6B28 EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x98D5FDCA EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0xB60D4288 EQ PUSH2 0x1E0 JUMPI PUSH2 0x70 JUMP JUMPDEST DUP1 PUSH4 0xD8E6E2C EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x3E47D6F3 EQ PUSH2 0xAA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8A PUSH2 0x1EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA8 PUSH2 0x28B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x32E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x148 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x346 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x173 PUSH2 0x375 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CA PUSH2 0x39B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E8 PUSH2 0x475 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0x8A753747A1FA494EC906CE90E9F37563A8AF630E SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x54FD4D50 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x25E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x274 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x32B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x351 PUSH2 0x39B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP5 DUP4 MUL DUP2 PUSH2 0x368 JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0x8A753747A1FA494EC906CE90E9F37563A8AF630E SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x411 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x427 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP POP POP SWAP2 POP POP PUSH5 0x2540BE400 DUP2 MUL SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH9 0x2B5E3AF16B1880000 SWAP1 POP DUP1 PUSH2 0x48D CALLVALUE PUSH2 0x346 JUMP JUMPDEST LT ISZERO PUSH2 0x501 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x596F75206E65656420746F207370656E64206D6F726520455448210000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 SHR MSTORE8 RETURNDATACOPY EQ LOG0 PUSH3 0xB4046A JUMPDEST SSTORE DUP4 SAR 0xA5 0x48 0x5D ADDRESS 0xD PUSH22 0xC218E9FE16396422EC4A954064736F6C634300060600 CALLER ",
							"sourceMap": "1630:3479:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;3201:357:1;;5:9:-1;2:2;;;27:1;24;17:12;2:2;3201:357:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4546:560;;;:::i;:::-;;2136:56;;5:9:-1;2:2;;;27:1;24;17:12;2:2;2136:56:1;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;2136:56:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4171:213;;5:9:-1;2:2;;;27:1;24;17:12;2:2;4171:213:1;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;4171:213:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2201:20;;5:9:-1;2:2;;;27:1;24;17:12;2:2;2201:20:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3631:444;;5:9:-1;2:2;;;27:1;24;17:12;2:2;3631:444:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2335:860;;;:::i;:::-;;3201:357;3244:7;3420:31;3476:42;3420:99;;3533:9;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;3533:19:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3533:19:1;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;3533:19:1;;;;;;;;;;;;;;;;3526:26;;;3201:357;:::o;4546:560::-;4959:5;;;;;;;;;;;4945:19;;:10;:19;;;4937:28;;12:1:-1;9;2:12;4937:28:1;4972:10;:19;;:42;4992:21;4972:42;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4972:42:1;4546:560::o;2136:56::-;;;;;;;;;;;;;;;;;:::o;4171:213::-;4239:7;4254:16;4273:10;:8;:10::i;:::-;4254:29;;4290:22;4340:8;4327:9;4316:8;:20;:33;;;;;;4290:60;;4364:14;4357:21;;;;4171:213;;;:::o;2201:20::-;;;;;;;;;;;;;:::o;3631:444::-;3672:7;3687:31;3743:42;3687:99;;3795:13;3815:9;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;3815:27:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3815:27:1;;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;3815:27:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3793:49;;;;;;3873:8;3864:6;:17;3849:33;;;;3631:444;:::o;2335:860::-;2648:18;2669:13;2648:34;;2969:10;2937:28;2955:9;2937:17;:28::i;:::-;:42;;2929:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3089:9;3052:21;:33;3074:10;3052:33;;;;;;;;;;;;;;;;:46;;;;;;;;;;;2335:860;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "282800",
								"executionCost": "21190",
								"totalCost": "303990"
							},
							"external": {
								"addressToAmountFunded(address)": "1214",
								"fund()": "infinite",
								"getConversionRate(uint256)": "infinite",
								"getPrice()": "infinite",
								"getVersion()": "infinite",
								"owner()": "1075",
								"withdraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1630,
									"end": 5109,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1630,
									"end": 5109,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1630,
									"end": 5109,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2277,
									"end": 2329,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 5,
									"end": 14,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 27,
									"end": 28,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 24,
									"end": 25,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 17,
									"end": 29,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 2277,
									"end": 2329,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2313,
									"end": 2323,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 2305,
									"end": 2310,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2305,
									"end": 2310,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2305,
									"end": 2323,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2305,
									"end": 2323,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 2305,
									"end": 2323,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2305,
									"end": 2323,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2305,
									"end": 2323,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2305,
									"end": 2323,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2305,
									"end": 2323,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2305,
									"end": 2323,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2305,
									"end": 2323,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2305,
									"end": 2323,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2305,
									"end": 2323,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2305,
									"end": 2323,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2305,
									"end": 2323,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2305,
									"end": 2323,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2305,
									"end": 2323,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2305,
									"end": 2323,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2305,
									"end": 2323,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2305,
									"end": 2323,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1630,
									"end": 5109,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1630,
									"end": 5109,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1630,
									"end": 5109,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1630,
									"end": 5109,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1630,
									"end": 5109,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1630,
									"end": 5109,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1630,
									"end": 5109,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220841c533e14a062b4046a5b55831da5485d300d75c218e9fe16396422ec4a954064736f6c63430006060033",
									".code": [
										{
											"begin": 1630,
											"end": 5109,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1630,
											"end": 5109,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1630,
											"end": 5109,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 5109,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1630,
											"end": 5109,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 5109,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 5109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1630,
											"end": 5109,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 5109,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1630,
											"end": 5109,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 5109,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1630,
											"end": 5109,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 5109,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 5109,
											"name": "PUSH",
											"source": 1,
											"value": "6E5B6B28"
										},
										{
											"begin": 1630,
											"end": 5109,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 5109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1630,
											"end": 5109,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 5109,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 5109,
											"name": "PUSH",
											"source": 1,
											"value": "6E5B6B28"
										},
										{
											"begin": 1630,
											"end": 5109,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 5109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1630,
											"end": 5109,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 5109,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 5109,
											"name": "PUSH",
											"source": 1,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1630,
											"end": 5109,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 5109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1630,
											"end": 5109,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 5109,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 5109,
											"name": "PUSH",
											"source": 1,
											"value": "98D5FDCA"
										},
										{
											"begin": 1630,
											"end": 5109,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 5109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1630,
											"end": 5109,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 5109,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 5109,
											"name": "PUSH",
											"source": 1,
											"value": "B60D4288"
										},
										{
											"begin": 1630,
											"end": 5109,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 5109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1630,
											"end": 5109,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 5109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1630,
											"end": 5109,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 5109,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1630,
											"end": 5109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 5109,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 5109,
											"name": "PUSH",
											"source": 1,
											"value": "D8E6E2C"
										},
										{
											"begin": 1630,
											"end": 5109,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 5109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1630,
											"end": 5109,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 5109,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 5109,
											"name": "PUSH",
											"source": 1,
											"value": "3CCFD60B"
										},
										{
											"begin": 1630,
											"end": 5109,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 5109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1630,
											"end": 5109,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 5109,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 5109,
											"name": "PUSH",
											"source": 1,
											"value": "3E47D6F3"
										},
										{
											"begin": 1630,
											"end": 5109,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 5109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1630,
											"end": 5109,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 5109,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1630,
											"end": 5109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 3201,
											"end": 3558,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3201,
											"end": 3558,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3201,
											"end": 3558,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "10"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "10"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3201,
											"end": 3558,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3201,
											"end": 3558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3201,
											"end": 3558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3201,
											"end": 3558,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3201,
											"end": 3558,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3201,
											"end": 3558,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3201,
											"end": 3558,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3201,
											"end": 3558,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3201,
											"end": 3558,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3201,
											"end": 3558,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3201,
											"end": 3558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3201,
											"end": 3558,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3201,
											"end": 3558,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3201,
											"end": 3558,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3201,
											"end": 3558,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3201,
											"end": 3558,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3201,
											"end": 3558,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3201,
											"end": 3558,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3201,
											"end": 3558,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3201,
											"end": 3558,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3201,
											"end": 3558,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3201,
											"end": 3558,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3201,
											"end": 3558,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3201,
											"end": 3558,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4546,
											"end": 5106,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 4546,
											"end": 5106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4546,
											"end": 5106,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 4546,
											"end": 5106,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 4546,
											"end": 5106,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4546,
											"end": 5106,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 4546,
											"end": 5106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4546,
											"end": 5106,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "15"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "15"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "17"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "17"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4384,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4171,
											"end": 4384,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4384,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "19"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "19"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4171,
											"end": 4384,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4171,
											"end": 4384,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4171,
											"end": 4384,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4384,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4384,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "21"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "21"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4171,
											"end": 4384,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4384,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4384,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4384,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4384,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4384,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4384,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4384,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4171,
											"end": 4384,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4384,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4384,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4384,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4384,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4384,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4384,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4384,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4171,
											"end": 4384,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4171,
											"end": 4384,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4171,
											"end": 4384,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4384,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4171,
											"end": 4384,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4384,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4384,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4384,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4384,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4384,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4171,
											"end": 4384,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4384,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4384,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4384,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4384,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4171,
											"end": 4384,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4384,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4384,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4384,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4384,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4384,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2201,
											"end": 2221,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2201,
											"end": 2221,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2201,
											"end": 2221,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "23"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "23"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2201,
											"end": 2221,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2201,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2201,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2201,
											"end": 2221,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2201,
											"end": 2221,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2201,
											"end": 2221,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2201,
											"end": 2221,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2201,
											"end": 2221,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2201,
											"end": 2221,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2201,
											"end": 2221,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2201,
											"end": 2221,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2201,
											"end": 2221,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2201,
											"end": 2221,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2201,
											"end": 2221,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2201,
											"end": 2221,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2201,
											"end": 2221,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2201,
											"end": 2221,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2201,
											"end": 2221,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2201,
											"end": 2221,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2201,
											"end": 2221,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2201,
											"end": 2221,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2201,
											"end": 2221,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2201,
											"end": 2221,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2201,
											"end": 2221,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2201,
											"end": 2221,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2201,
											"end": 2221,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2201,
											"end": 2221,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2201,
											"end": 2221,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 4075,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3631,
											"end": 4075,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 4075,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "26"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "26"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3631,
											"end": 4075,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3631,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3631,
											"end": 4075,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3631,
											"end": 4075,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3631,
											"end": 4075,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 4075,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3631,
											"end": 4075,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 4075,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 4075,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 4075,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 4075,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 4075,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3631,
											"end": 4075,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 4075,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 4075,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 4075,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 4075,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3631,
											"end": 4075,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 4075,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 4075,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 4075,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 4075,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 4075,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2335,
											"end": 3195,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2335,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2335,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2335,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2335,
											"end": 3195,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2335,
											"end": 3195,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2335,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2335,
											"end": 3195,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 3201,
											"end": 3558,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3201,
											"end": 3558,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3251,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3420,
											"end": 3451,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3476,
											"end": 3518,
											"name": "PUSH",
											"source": 1,
											"value": "8A753747A1FA494EC906CE90E9F37563A8AF630E"
										},
										{
											"begin": 3420,
											"end": 3519,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3420,
											"end": 3519,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3542,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3550,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3533,
											"end": 3550,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3550,
											"name": "PUSH",
											"source": 1,
											"value": "54FD4D50"
										},
										{
											"begin": 3533,
											"end": 3552,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3533,
											"end": 3552,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3552,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3552,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3533,
											"end": 3552,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3552,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3533,
											"end": 3552,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3552,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3552,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3552,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3533,
											"end": 3552,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3552,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3533,
											"end": 3552,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3533,
											"end": 3552,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3552,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3552,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3552,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3552,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3552,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3552,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3552,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3552,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "32"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "32"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3533,
											"end": 3552,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3552,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3552,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3552,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "34"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY",
											"source": -1
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"source": -1,
											"value": "34"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3533,
											"end": 3552,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3552,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3552,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3552,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3552,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3533,
											"end": 3552,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3552,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "35"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "35"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3533,
											"end": 3552,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3552,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3552,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3552,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3552,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3552,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3533,
											"end": 3552,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3552,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3552,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3552,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3552,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3552,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3526,
											"end": 3552,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3526,
											"end": 3552,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3526,
											"end": 3552,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3201,
											"end": 3558,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3201,
											"end": 3558,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4546,
											"end": 5106,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 4546,
											"end": 5106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4959,
											"end": 4964,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4959,
											"end": 4964,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4959,
											"end": 4964,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4959,
											"end": 4964,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4959,
											"end": 4964,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4959,
											"end": 4964,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4959,
											"end": 4964,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4959,
											"end": 4964,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4959,
											"end": 4964,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4959,
											"end": 4964,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4959,
											"end": 4964,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4945,
											"end": 4964,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4945,
											"end": 4964,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4945,
											"end": 4955,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4945,
											"end": 4964,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4945,
											"end": 4964,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4945,
											"end": 4964,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4937,
											"end": 4965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4937,
											"end": 4965,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4937,
											"end": 4965,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4937,
											"end": 4965,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4972,
											"end": 4982,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 4972,
											"end": 4991,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4972,
											"end": 4991,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4972,
											"end": 5014,
											"name": "PUSH",
											"source": 1,
											"value": "8FC"
										},
										{
											"begin": 4992,
											"end": 5013,
											"name": "SELFBALANCE",
											"source": 1
										},
										{
											"begin": 4972,
											"end": 5014,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4972,
											"end": 5014,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4972,
											"end": 5014,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4972,
											"end": 5014,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4972,
											"end": 5014,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4972,
											"end": 5014,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4972,
											"end": 5014,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4972,
											"end": 5014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4972,
											"end": 5014,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4972,
											"end": 5014,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4972,
											"end": 5014,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4972,
											"end": 5014,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4972,
											"end": 5014,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4972,
											"end": 5014,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4972,
											"end": 5014,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4972,
											"end": 5014,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4972,
											"end": 5014,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4972,
											"end": 5014,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 4972,
											"end": 5014,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4972,
											"end": 5014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4972,
											"end": 5014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4972,
											"end": 5014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4972,
											"end": 5014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4972,
											"end": 5014,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "39"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY",
											"source": -1
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"source": -1,
											"value": "39"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4972,
											"end": 5014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4546,
											"end": 5106,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2192,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4171,
											"end": 4384,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4171,
											"end": 4384,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4239,
											"end": 4246,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4254,
											"end": 4270,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4273,
											"end": 4283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4273,
											"end": 4281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4273,
											"end": 4283,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4273,
											"end": 4283,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4273,
											"end": 4283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4254,
											"end": 4283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4254,
											"end": 4283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4290,
											"end": 4312,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4340,
											"end": 4348,
											"name": "PUSH",
											"source": 1,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 4327,
											"end": 4336,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4316,
											"end": 4324,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4316,
											"end": 4336,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4316,
											"end": 4349,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4316,
											"end": 4349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 4316,
											"end": 4349,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4316,
											"end": 4349,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 4316,
											"end": 4349,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 4316,
											"end": 4349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4316,
											"end": 4349,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4290,
											"end": 4350,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4290,
											"end": 4350,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4364,
											"end": 4378,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4378,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4384,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4384,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4384,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4384,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2201,
											"end": 2221,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2201,
											"end": 2221,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2201,
											"end": 2221,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2201,
											"end": 2221,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2201,
											"end": 2221,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2201,
											"end": 2221,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2201,
											"end": 2221,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2201,
											"end": 2221,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2201,
											"end": 2221,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2201,
											"end": 2221,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2201,
											"end": 2221,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2201,
											"end": 2221,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2201,
											"end": 2221,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2201,
											"end": 2221,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2201,
											"end": 2221,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3631,
											"end": 4075,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3631,
											"end": 4075,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3672,
											"end": 3679,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3687,
											"end": 3718,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3743,
											"end": 3785,
											"name": "PUSH",
											"source": 1,
											"value": "8A753747A1FA494EC906CE90E9F37563A8AF630E"
										},
										{
											"begin": 3687,
											"end": 3786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3687,
											"end": 3786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3795,
											"end": 3808,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3815,
											"end": 3824,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3840,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3815,
											"end": 3840,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3840,
											"name": "PUSH",
											"source": 1,
											"value": "FEAF968C"
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "44"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "44"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "46"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY",
											"source": -1
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"source": -1,
											"value": "46"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 15,
											"end": 18,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 19,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "47"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 32,
											"end": 33,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 22,
											"end": 34,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "47"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3793,
											"end": 3842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3793,
											"end": 3842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3793,
											"end": 3842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3793,
											"end": 3842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3793,
											"end": 3842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3793,
											"end": 3842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3873,
											"end": 3881,
											"name": "PUSH",
											"source": 1,
											"value": "2540BE400"
										},
										{
											"begin": 3864,
											"end": 3870,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3864,
											"end": 3881,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3849,
											"end": 3882,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3849,
											"end": 3882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3849,
											"end": 3882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3849,
											"end": 3882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 4075,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 4075,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2335,
											"end": 3195,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2335,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2666,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2669,
											"end": 2682,
											"name": "PUSH",
											"source": 1,
											"value": "2B5E3AF16B1880000"
										},
										{
											"begin": 2648,
											"end": 2682,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2682,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2969,
											"end": 2979,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2937,
											"end": 2965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2955,
											"end": 2964,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2937,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2937,
											"end": 2965,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2937,
											"end": 2965,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2937,
											"end": 2965,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2937,
											"end": 2979,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2937,
											"end": 2979,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2929,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2929,
											"end": 3011,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2929,
											"end": 3011,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2929,
											"end": 3011,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2929,
											"end": 3011,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2929,
											"end": 3011,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2929,
											"end": 3011,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2929,
											"end": 3011,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2929,
											"end": 3011,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2929,
											"end": 3011,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2929,
											"end": 3011,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2929,
											"end": 3011,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2929,
											"end": 3011,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2929,
											"end": 3011,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2929,
											"end": 3011,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2929,
											"end": 3011,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2929,
											"end": 3011,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2929,
											"end": 3011,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2929,
											"end": 3011,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 2929,
											"end": 3011,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2929,
											"end": 3011,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2929,
											"end": 3011,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2929,
											"end": 3011,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2929,
											"end": 3011,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2929,
											"end": 3011,
											"name": "PUSH",
											"source": 1,
											"value": "596F75206E65656420746F207370656E64206D6F726520455448210000000000"
										},
										{
											"begin": 2929,
											"end": 3011,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2929,
											"end": 3011,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2929,
											"end": 3011,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2929,
											"end": 3011,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2929,
											"end": 3011,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2929,
											"end": 3011,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2929,
											"end": 3011,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2929,
											"end": 3011,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2929,
											"end": 3011,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2929,
											"end": 3011,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2929,
											"end": 3011,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2929,
											"end": 3011,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2929,
											"end": 3011,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2929,
											"end": 3011,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2929,
											"end": 3011,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2929,
											"end": 3011,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2929,
											"end": 3011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3098,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3073,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3085,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3074,
											"end": 3084,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3085,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3085,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3085,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3085,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3085,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3085,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3085,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3052,
											"end": 3085,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3085,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3085,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3085,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3085,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3052,
											"end": 3085,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3085,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3085,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3085,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3098,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3098,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3098,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3098,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3098,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3098,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3098,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3098,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3098,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3098,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2335,
											"end": 3195,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2335,
											"end": 3195,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"addressToAmountFunded(address)": "3e47d6f3",
							"fund()": "b60d4288",
							"getConversionRate(uint256)": "6e5b6b28",
							"getPrice()": "98d5fdca",
							"getVersion()": "0d8e6e2c",
							"owner()": "8da5cb5b",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"}],\"name\":\"getConversionRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"lesson-3/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":{\"keccak256\":\"0x105f5e9491f3d0bbdd4f1c7627eb839d69b944bfd803028a01cc083597692c1f\",\"urls\":[\"bzz-raw://ec45a2748a024a947a921183d4102d5e206808588501d85ddc4f5668a009bc73\",\"dweb:/ipfs/QmRNAMpq7LdWFnJ7wWKGbUuAcURaGSS42PMxtQ4vjrHmp9\"]},\"lesson-3/FundMe.sol\":{\"keccak256\":\"0x57bfb805dda108d568181e05c679ba29b1be6cda9ecde141a60f1355fc155464\",\"urls\":[\"bzz-raw://06a7bf6aa3a0e05c8090501e69b6b41f2165b0937d88d684fb742b154176e308\",\"dweb:/ipfs/QmXA6PVftHDN6M5GQh1Ju6BYU4o7BKgGbusNFYgxqm8b5h\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol",
					"exportedSymbols": {
						"SafeMathChainlink": [
							138
						]
					},
					"id": 139,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "57:563:0",
								"text": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 138,
							"linearizedBaseContracts": [
								138
							],
							"name": "SafeMathChainlink",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "930:95:0",
										"statements": [
											{
												"assignments": [
													13
												],
												"declarations": [
													{
														"constant": false,
														"id": 13,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 27,
														"src": "936:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 12,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "936:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 17,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 14,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "948:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 15,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "952:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "948:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "936:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 21,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 19,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "967:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 20,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "972:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "967:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "975:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 18,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "959:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "959:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "959:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 25,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 13,
													"src": "1019:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 11,
												"id": 26,
												"nodeType": "Return",
												"src": "1012:8:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "651:209:0",
										"text": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n    * Counterpart to Solidity's `+` operator.\n    * Requirements:\n- Addition cannot overflow."
									},
									"id": 28,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 28,
												"src": "876:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 28,
												"src": "887:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "875:22:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 28,
												"src": "921:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 9,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "921:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "920:9:0"
									},
									"scope": 138,
									"src": "863:162:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1344:98:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 39,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 33,
																"src": "1358:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 40,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 31,
																"src": "1363:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1358:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1366:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 38,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1350:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1350:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 44,
												"nodeType": "ExpressionStatement",
												"src": "1350:49:0"
											},
											{
												"assignments": [
													46
												],
												"declarations": [
													{
														"constant": false,
														"id": 46,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 53,
														"src": "1405:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 45,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1405:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 50,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 47,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "1417:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 48,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "1421:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1417:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1405:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 51,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 46,
													"src": "1436:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 37,
												"id": 52,
												"nodeType": "Return",
												"src": "1429:8:0"
											}
										]
									},
									"documentation": {
										"id": 29,
										"nodeType": "StructuredDocumentation",
										"src": "1029:245:0",
										"text": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n    * Counterpart to Solidity's `-` operator.\n    * Requirements:\n- Subtraction cannot overflow."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 54,
												"src": "1290:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1290:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 54,
												"src": "1301:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 32,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1301:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1289:22:0"
									},
									"returnParameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 54,
												"src": "1335:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1335:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1334:9:0"
									},
									"scope": 138,
									"src": "1277:165:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "1737:351:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 64,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 57,
														"src": "1952:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1957:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1952:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 70,
												"nodeType": "IfStatement",
												"src": "1948:35:0",
												"trueBody": {
													"id": 69,
													"nodeType": "Block",
													"src": "1960:23:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 67,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1975:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 63,
															"id": 68,
															"nodeType": "Return",
															"src": "1968:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													72
												],
												"declarations": [
													{
														"constant": false,
														"id": 72,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 88,
														"src": "1989:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 71,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1989:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 76,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 73,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 57,
														"src": "2001:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 74,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 59,
														"src": "2005:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2001:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1989:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 80,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 78,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 72,
																	"src": "2020:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 79,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 57,
																	"src": "2024:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2020:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 81,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 59,
																"src": "2029:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2020:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2032:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 77,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2012:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2012:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2012:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 86,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 72,
													"src": "2082:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 63,
												"id": 87,
												"nodeType": "Return",
												"src": "2075:8:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1446:221:0",
										"text": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n    * Counterpart to Solidity's `*` operator.\n    * Requirements:\n- Multiplication cannot overflow."
									},
									"id": 89,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 89,
												"src": "1683:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 89,
												"src": "1694:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1694:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1682:22:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 89,
												"src": "1728:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 61,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1728:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1727:9:0"
									},
									"scope": 138,
									"src": "1670:418:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 114,
										"nodeType": "Block",
										"src": "2596:237:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 100,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 94,
																"src": "2672:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 101,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2676:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2672:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2679:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 99,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2664:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2664:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 105,
												"nodeType": "ExpressionStatement",
												"src": "2664:44:0"
											},
											{
												"assignments": [
													107
												],
												"declarations": [
													{
														"constant": false,
														"id": 107,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 114,
														"src": "2714:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 106,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2714:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 111,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 108,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 92,
														"src": "2726:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 109,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2730:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2726:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2714:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 112,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 107,
													"src": "2827:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 98,
												"id": 113,
												"nodeType": "Return",
												"src": "2820:8:0"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "2092:434:0",
										"text": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n    * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n    * Requirements:\n- The divisor cannot be zero."
									},
									"id": 115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 115,
												"src": "2542:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2542:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 115,
												"src": "2553:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 93,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2553:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2541:22:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 115,
												"src": "2587:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2587:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2586:9:0"
									},
									"scope": 138,
									"src": "2529:304:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 136,
										"nodeType": "Block",
										"src": "3330:72:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 126,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 120,
																"src": "3344:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 127,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3349:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3344:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3352:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 125,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3336:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3336:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "3336:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 132,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "3392:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 133,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "3396:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3392:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 124,
												"id": 135,
												"nodeType": "Return",
												"src": "3385:12:0"
											}
										]
									},
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "2837:423:0",
										"text": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n    * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n    * Requirements:\n- The divisor cannot be zero."
									},
									"id": 137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 137,
												"src": "3276:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3276:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 137,
												"src": "3287:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3287:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3275:22:0"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 137,
												"src": "3321:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3321:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3320:9:0"
									},
									"scope": 138,
									"src": "3263:139:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 139,
							"src": "621:2783:0"
						}
					],
					"src": "32:3373:0"
				},
				"id": 0
			},
			"lesson-3/FundMe.sol": {
				"ast": {
					"absolutePath": "lesson-3/FundMe.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							185
						],
						"FundMe": [
							338
						]
					},
					"id": 339,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 140,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".6",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:31:1"
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol",
							"file": "@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol",
							"id": 141,
							"nodeType": "ImportDirective",
							"scope": 339,
							"sourceUnit": 139,
							"src": "70:68:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 185,
							"linearizedBaseContracts": [
								185
							],
							"name": "AggregatorV3Interface",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "313ce567",
									"id": 146,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "729:2:1"
									},
									"returnParameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 146,
												"src": "778:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 143,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "778:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "769:21:1"
									},
									"scope": 185,
									"src": "712:79:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "7284e416",
									"id": 151,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "817:2:1"
									},
									"returnParameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 151,
												"src": "866:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 148,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "866:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "857:29:1"
									},
									"scope": 185,
									"src": "797:90:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "54fd4d50",
									"id": 156,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "909:2:1"
									},
									"returnParameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 156,
												"src": "958:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "958:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "949:23:1"
									},
									"scope": 185,
									"src": "893:80:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "9a6fc8f5",
									"id": 171,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "_roundId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 171,
												"src": "1221:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 157,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "1221:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1214:27:1"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "roundId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 171,
												"src": "1288:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 160,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "1288:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "answer",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 171,
												"src": "1311:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 162,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1311:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "startedAt",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 171,
												"src": "1333:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1333:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "updatedAt",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 171,
												"src": "1359:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1359:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 171,
												"src": "1385:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 168,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "1385:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1279:135:1"
									},
									"scope": 185,
									"src": "1193:222:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "feaf968c",
									"id": 184,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1445:2:1"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "roundId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 184,
												"src": "1494:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 173,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "1494:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "answer",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 184,
												"src": "1517:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 175,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1517:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "startedAt",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 184,
												"src": "1539:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1539:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "updatedAt",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 184,
												"src": "1565:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1565:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 184,
												"src": "1591:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 181,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "1591:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1485:135:1"
									},
									"scope": 185,
									"src": "1421:200:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 339,
							"src": "673:953:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 338,
							"linearizedBaseContracts": [
								338
							],
							"name": "FundMe",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 188,
									"libraryName": {
										"contractScope": null,
										"id": 186,
										"name": "SafeMathChainlink",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 138,
										"src": "1982:17:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMathChainlink_$138",
											"typeString": "library SafeMathChainlink"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1976:36:1",
									"typeName": {
										"id": 187,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2004:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "3e47d6f3",
									"id": 192,
									"mutability": "mutable",
									"name": "addressToAmountFunded",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 338,
									"src": "2136:56:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 191,
										"keyType": {
											"id": 189,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2144:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2136:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 190,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2155:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 194,
									"mutability": "mutable",
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 338,
									"src": "2201:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 193,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2201:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "2298:31:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 197,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "2305:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 198,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "2313:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 199,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2313:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2305:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 201,
												"nodeType": "ExpressionStatement",
												"src": "2305:18:1"
											}
										]
									},
									"documentation": null,
									"id": 203,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2288:2:1"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2298:0:1"
									},
									"scope": 338,
									"src": "2277:52:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 232,
										"nodeType": "Block",
										"src": "2366:829:1",
										"statements": [
											{
												"assignments": [
													207
												],
												"declarations": [
													{
														"constant": false,
														"id": 207,
														"mutability": "mutable",
														"name": "minimumUSD",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 232,
														"src": "2648:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 206,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2648:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 213,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_rational_50000000000000000000_by_1",
														"typeString": "int_const 50000000000000000000"
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"hexValue": "3530",
														"id": 208,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2669:2:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_50_by_1",
															"typeString": "int_const 50"
														},
														"value": "50"
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"id": 211,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "3130",
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2674:2:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "3138",
															"id": 210,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2680:2:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_18_by_1",
																"typeString": "int_const 18"
															},
															"value": "18"
														},
														"src": "2674:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														}
													},
													"src": "2669:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_50000000000000000000_by_1",
														"typeString": "int_const 50000000000000000000"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2648:34:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 216,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -15,
																			"src": "2955:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 217,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "2955:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 215,
																	"name": "getConversionRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 303,
																	"src": "2937:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) view returns (uint256)"
																	}
																},
																"id": 218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2937:28:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 219,
																"name": "minimumUSD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 207,
																"src": "2969:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2937:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "596f75206e65656420746f207370656e64206d6f72652045544821",
															"id": 221,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2981:29:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4f4d6283454b528bce61a908a772808c61dd40185e3ba77c713fa86ebb8d7362",
																"typeString": "literal_string \"You need to spend more ETH!\""
															},
															"value": "You need to spend more ETH!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4f4d6283454b528bce61a908a772808c61dd40185e3ba77c713fa86ebb8d7362",
																"typeString": "literal_string \"You need to spend more ETH!\""
															}
														],
														"id": 214,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2929:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2929:82:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 223,
												"nodeType": "ExpressionStatement",
												"src": "2929:82:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 224,
															"name": "addressToAmountFunded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "3052:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 227,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 225,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "3074:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3074:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3052:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 228,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "3089:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 229,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3089:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3052:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 231,
												"nodeType": "ExpressionStatement",
												"src": "3052:46:1"
											}
										]
									},
									"documentation": null,
									"functionSelector": "b60d4288",
									"id": 233,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fund",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2348:2:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2366:0:1"
									},
									"scope": 338,
									"src": "2335:860:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 248,
										"nodeType": "Block",
										"src": "3252:306:1",
										"statements": [
											{
												"assignments": [
													239
												],
												"declarations": [
													{
														"constant": false,
														"id": 239,
														"mutability": "mutable",
														"name": "priceFeed",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 248,
														"src": "3420:31:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$185",
															"typeString": "contract AggregatorV3Interface"
														},
														"typeName": {
															"contractScope": null,
															"id": 238,
															"name": "AggregatorV3Interface",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 185,
															"src": "3420:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$185",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 243,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "307838413735333734374131466134393445433930366345393045396633373536334138414636333065",
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3476:42:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"value": "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 240,
														"name": "AggregatorV3Interface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 185,
														"src": "3454:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$185_$",
															"typeString": "type(contract AggregatorV3Interface)"
														}
													},
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3454:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$185",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:99:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 244,
															"name": "priceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "3533:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$185",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "version",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 156,
														"src": "3533:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3533:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 237,
												"id": 247,
												"nodeType": "Return",
												"src": "3526:26:1"
											}
										]
									},
									"documentation": null,
									"functionSelector": "0d8e6e2c",
									"id": 249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getVersion",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3220:2:1"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 249,
												"src": "3244:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3244:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3243:9:1"
									},
									"scope": 338,
									"src": "3201:357:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 275,
										"nodeType": "Block",
										"src": "3680:395:1",
										"statements": [
											{
												"assignments": [
													255
												],
												"declarations": [
													{
														"constant": false,
														"id": 255,
														"mutability": "mutable",
														"name": "priceFeed",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 275,
														"src": "3687:31:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$185",
															"typeString": "contract AggregatorV3Interface"
														},
														"typeName": {
															"contractScope": null,
															"id": 254,
															"name": "AggregatorV3Interface",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 185,
															"src": "3687:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$185",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 259,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "307838413735333734374131466134393445433930366345393045396633373536334138414636333065",
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3743:42:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"value": "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 256,
														"name": "AggregatorV3Interface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 185,
														"src": "3721:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$185_$",
															"typeString": "type(contract AggregatorV3Interface)"
														}
													},
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3721:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$185",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3687:99:1"
											},
											{
												"assignments": [
													null,
													261,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 261,
														"mutability": "mutable",
														"name": "answer",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 275,
														"src": "3795:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 260,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "3795:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 265,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 262,
															"name": "priceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "3815:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$185",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 184,
														"src": "3815:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3815:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3793:49:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 268,
																"name": "answer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 261,
																"src": "3864:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000_by_1",
																	"typeString": "int_const 10000000000"
																},
																"id": 271,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "3130",
																	"id": 269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3873:2:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3130",
																	"id": 270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3879:2:1",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "3873:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000_by_1",
																	"typeString": "int_const 10000000000"
																}
															},
															"src": "3864:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 267,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3856:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 266,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3856:7:1",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3856:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 253,
												"id": 274,
												"nodeType": "Return",
												"src": "3849:33:1"
											}
										]
									},
									"documentation": null,
									"functionSelector": "98d5fdca",
									"id": 276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPrice",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3648:2:1"
									},
									"returnParameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 276,
												"src": "3672:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3672:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3671:9:1"
									},
									"scope": 338,
									"src": "3631:444:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 302,
										"nodeType": "Block",
										"src": "4247:137:1",
										"statements": [
											{
												"assignments": [
													284
												],
												"declarations": [
													{
														"constant": false,
														"id": 284,
														"mutability": "mutable",
														"name": "ethPrice",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 302,
														"src": "4254:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 283,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4254:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 287,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 285,
														"name": "getPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "4273:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4273:10:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4254:29:1"
											},
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "ethAmountInUsd",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 302,
														"src": "4290:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 288,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4290:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 299,
												"initialValue": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 290,
																	"name": "ethPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 284,
																	"src": "4316:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 291,
																	"name": "ethAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 278,
																	"src": "4327:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4316:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"id": 295,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"hexValue": "3130",
																			"id": 293,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4340:2:1",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "3138",
																			"id": 294,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4346:2:1",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_18_by_1",
																				"typeString": "int_const 18"
																			},
																			"value": "18"
																		},
																		"src": "4340:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		}
																	}
																],
																"id": 296,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4339:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															},
															"src": "4316:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 298,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "4315:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4290:60:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 300,
													"name": "ethAmountInUsd",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 289,
													"src": "4364:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 282,
												"id": 301,
												"nodeType": "Return",
												"src": "4357:21:1"
											}
										]
									},
									"documentation": null,
									"functionSelector": "6e5b6b28",
									"id": 303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getConversionRate",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "ethAmount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 303,
												"src": "4199:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4199:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4198:19:1"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 303,
												"src": "4239:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4239:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4238:9:1"
									},
									"scope": 338,
									"src": "4171:213:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "4491:49:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 306,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "4506:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 307,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4506:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 308,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 194,
																"src": "4520:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4506:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 305,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4498:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4498:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 311,
												"nodeType": "ExpressionStatement",
												"src": "4498:28:1"
											},
											{
												"id": 312,
												"nodeType": "PlaceholderStatement",
												"src": "4533:1:1"
											}
										]
									},
									"documentation": null,
									"id": 314,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4491:0:1"
									},
									"src": "4472:68:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 336,
										"nodeType": "Block",
										"src": "4581:525:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 318,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "4945:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4945:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 320,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 194,
																"src": "4959:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4945:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 317,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4937:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4937:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "4937:28:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 331,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -28,
																		"src": "5000:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_FundMe_$338",
																			"typeString": "contract FundMe"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_FundMe_$338",
																			"typeString": "contract FundMe"
																		}
																	],
																	"id": 330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4992:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 329,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4992:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 332,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4992:13:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4992:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 324,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "4972:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4972:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 328,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "4972:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4972:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 335,
												"nodeType": "ExpressionStatement",
												"src": "4972:42:1"
											}
										]
									},
									"documentation": null,
									"functionSelector": "3ccfd60b",
									"id": 337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4563:2:1"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4581:0:1"
									},
									"scope": 338,
									"src": "4546:560:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 339,
							"src": "1630:3479:1"
						}
					],
					"src": "35:5074:1"
				},
				"id": 1
			}
		}
	}
}